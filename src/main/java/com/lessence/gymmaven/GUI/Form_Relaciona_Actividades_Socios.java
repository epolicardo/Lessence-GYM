/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.lessence.gymmaven.GUI;

import com.lessence.gymmaven.clases.Actividades_Socios_Turnos;
import com.lessence.gymmaven.clases.HibernateUtil;
import com.lessence.gymmaven.clases.Relaciones;
import com.lessence.gymmaven.clases.Socios;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Criteria;
import org.hibernate.Session;

/**
 *
 * @author Emiliano
 */
public class Form_Relaciona_Actividades_Socios extends javax.swing.JDialog {

    /**
     * Creates new form RelacionActividadSocio
     */
    public Form_Relaciona_Actividades_Socios(String Socio) {
        initComponents();
        jTDNI.setText(Socio);
        jPAsignaciones.setVisible(false);
         this.setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPAsignaciones = new javax.swing.JPanel();
        jCHorarios = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jBGuardar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTNombre = new javax.swing.JTextField();
        jTDNI = new javax.swing.JTextField();
        jBBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTActividades = new javax.swing.JTable();
        jBNuevaAsignacion = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Asignación de Actividades a Socios");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPAsignaciones.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jCHorarios.setFont(new java.awt.Font("BankGothic Lt BT", 0, 14)); // NOI18N
        jCHorarios.setEnabled(false);
        jCHorarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCHorariosActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("BankGothic Lt BT", 0, 14)); // NOI18N
        jLabel3.setText("Actividades - Turnos Disponibles - Profesores");
        jLabel3.setEnabled(false);

        jBGuardar.setFont(new java.awt.Font("BankGothic Lt BT", 0, 14)); // NOI18N
        jBGuardar.setText("Añadir");
        jBGuardar.setEnabled(false);
        jBGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGuardarActionPerformed(evt);
            }
        });

        jbCancelar.setFont(new java.awt.Font("BankGothic Lt BT", 0, 14)); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.setEnabled(false);
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPAsignacionesLayout = new javax.swing.GroupLayout(jPAsignaciones);
        jPAsignaciones.setLayout(jPAsignacionesLayout);
        jPAsignacionesLayout.setHorizontalGroup(
            jPAsignacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPAsignacionesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPAsignacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPAsignacionesLayout.createSequentialGroup()
                        .addComponent(jCHorarios, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbCancelar))
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPAsignacionesLayout.setVerticalGroup(
            jPAsignacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPAsignacionesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPAsignacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCHorarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBGuardar)
                    .addComponent(jbCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel7.setFont(new java.awt.Font("BankGothic Lt BT", 0, 14)); // NOI18N
        jLabel7.setText("Documento");

        jLabel8.setFont(new java.awt.Font("BankGothic Lt BT", 0, 14)); // NOI18N
        jLabel8.setText("Socio");

        jTNombre.setFont(new java.awt.Font("BankGothic Lt BT", 0, 14)); // NOI18N

        jTDNI.setFont(new java.awt.Font("BankGothic Lt BT", 0, 14)); // NOI18N
        jTDNI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTDNIKeyReleased(evt);
            }
        });

        jBBuscar.setFont(new java.awt.Font("BankGothic Lt BT", 0, 14)); // NOI18N
        jBBuscar.setText("Buscar");
        jBBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jTDNI, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jTNombre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBBuscar)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBBuscar))
                .addContainerGap())
        );

        jTActividades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Actividades", "Turnos", "Profesores", "Pases Disponibles"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTActividades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTActividadesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTActividades);

        jBNuevaAsignacion.setFont(new java.awt.Font("BankGothic Lt BT", 0, 14)); // NOI18N
        jBNuevaAsignacion.setText("Asignar Actividades");
        jBNuevaAsignacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNuevaAsignacionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jBNuevaAsignacion)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPAsignaciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBNuevaAsignacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPAsignaciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTActividadesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTActividadesMouseClicked
        if (evt.getClickCount() == 2) {
            if (0 == JOptionPane.showConfirmDialog(this, "Va a eliminar la asignacion seleccionada. \nDesea continuar?",
                    "Gestion de Actividades", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE)) {
                if (0 == JOptionPane.showConfirmDialog(this, "Esta acción no puede ser deshecha.\nEn caso de continuar perderá la "
                        + "información referida\na la relación entre el socio y la actividad seleccionada."
                        + "\nDesea continuar de todas formas?", "Gestion de Actividades", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE)) {
                    Session sesion = HibernateUtil.getSessionFactory().openSession();
                    DefaultTableModel modelo = (DefaultTableModel) jTActividades.getModel();
                    Criteria consulta_ast = sesion.createCriteria(Actividades_Socios_Turnos.class);
                    List<Actividades_Socios_Turnos> lista_actividades = consulta_ast.list();
                    for (int i = 0; i < lista_actividades.size(); i++) {
                        Actividades_Socios_Turnos actividad = lista_actividades.get(i);
                        if (jTDNI.getText().equals(actividad.getSocio().getPersona().getDNI())) {
                            if (modelo.getValueAt(jTActividades.getSelectedRow(), 0).toString().equals(actividad.getRelacion().getActividad().getActividad())) {
                                try {
                                    sesion.beginTransaction();
                                    sesion.delete(actividad);
                                    sesion.getTransaction().commit();

                                    JOptionPane.showMessageDialog(rootPane, "La relacion fue eliminada correctamente", "Gestion de Actividades", JOptionPane.INFORMATION_MESSAGE);
                                    LlenarTabla();
                                } catch (Exception e) {
                                    JOptionPane.showMessageDialog(rootPane, "No se puede eliminar esta relacion, la misma esta en uso.\nPara poder eliminar una actividad,\nes necesario que la misma "
                                            + "no esté asociada a ningun socio ni profesor ni turno.\nMensaje tecnico: " + e.getMessage());
                                }
                            }
                        }
                    }
                    sesion.close();
                }
            }
        }
    }//GEN-LAST:event_jTActividadesMouseClicked

    private void jTDNIKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTDNIKeyReleased
        getRootPane().setDefaultButton(jBBuscar);
    }//GEN-LAST:event_jTDNIKeyReleased

    private void jBNuevaAsignacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNuevaAsignacionActionPerformed

        jPAsignaciones.setVisible(true);
        for (int i = 0; i < jPAsignaciones.getComponentCount(); i++) {
            jPAsignaciones.getComponent(i).setEnabled(true);
        }
//        for (int i = 0; i < jPPases.getComponentCount(); i++) {
//            jPPases.getComponent(i).setEnabled(false);
//        }

        jCHorarios.removeAllItems();
        Session sesion = HibernateUtil.getSessionFactory().openSession();
        Criteria consulta = sesion.createCriteria(Relaciones.class);
        List<Relaciones> listaRelaciones = consulta.list();
        for (int i = 0; i < listaRelaciones.size(); i++) {
            Relaciones relacion = listaRelaciones.get(i);
            jCHorarios.addItem(relacion.getActividad().getActividad() + " - "
                    + relacion.getHorario().getHorario() + " - "
                    + relacion.getProfesor().getPersona().getApellido() + ", "
                    + relacion.getProfesor().getPersona().getNombre());
        }
        jCHorarios.setSelectedIndex(-1);

    }//GEN-LAST:event_jBNuevaAsignacionActionPerformed

    private void jBGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGuardarActionPerformed
        Session sesion = HibernateUtil.getSessionFactory().openSession();
        sesion.beginTransaction();
        Actividades_Socios_Turnos relacion_Actividad_Socio_Turno = new Actividades_Socios_Turnos();
        Criteria consultaSocios = sesion.createCriteria(Socios.class);
        Criteria consultaRelacionActividadSocioTurno = sesion.createCriteria(Relaciones.class);
        List<Socios> listaSocios = consultaSocios.list();
        int pases = 0;
        for (int r = 0; r < listaSocios.size(); r++) {
            Socios socio = listaSocios.get(r);
            if (socio.getPersona().getDNI().equals(jTDNI.getText())) {
                List<Relaciones> listaRelaciones = consultaRelacionActividadSocioTurno.list();
                for (int i = 0; i < listaRelaciones.size(); i++) {
                    Relaciones relacionTurnos = listaRelaciones.get(i);
                    if (relacionTurnos.getIdRelacion() == jCHorarios.getSelectedIndex() + 1) {
                        relacion_Actividad_Socio_Turno.setSocio(socio);
                        relacion_Actividad_Socio_Turno.setRelacion(relacionTurnos);
//                        if (jRB4Pases.isSelected()) {
//                            pases = 4;
//                            relacion_Actividad_Socio_Turno.setPases(pases);
//                            relacion_Actividad_Socio_Turno.setPaseLibre(0);
//                        }
//                        if (jRB8Pases.isSelected()) {
//                            pases = 8;
//                            relacion_Actividad_Socio_Turno.setPases(pases);
//                            relacion_Actividad_Socio_Turno.setPaseLibre(0);
//                        }
//                        if (jRB12Pases.isSelected()) {
//                            pases = 12;
//                            relacion_Actividad_Socio_Turno.setPases(pases);
//                            relacion_Actividad_Socio_Turno.setPaseLibre(0);
//                        }
//                        if (jRPases.isSelected()) {
//                            pases = Integer.parseInt(jsPases.getValue().toString());
//                            relacion_Actividad_Socio_Turno.setPases(pases);
//                            relacion_Actividad_Socio_Turno.setPaseLibre(0);
//                        }
//                        if (jRBPaseLibre.isSelected()) {
//
//                            relacion_Actividad_Socio_Turno.setPases(0);
//                            relacion_Actividad_Socio_Turno.setPaseLibre(1);
//                        }
                        relacion_Actividad_Socio_Turno.setPases(0);
                        relacion_Actividad_Socio_Turno.setPaseLibre(0);
                        sesion.save(relacion_Actividad_Socio_Turno);
                    }
                }
            }
        }
        sesion.getTransaction().commit();
        sesion.close();
        LlenarTabla();
        JOptionPane.showMessageDialog(this, "La asignación se cargó correctamente", "Gestión de Actividades", JOptionPane.INFORMATION_MESSAGE);
        if (JOptionPane.showConfirmDialog(rootPane, "Desea añadir otra actividad?", "Socios", JOptionPane.YES_NO_OPTION) == 0) {
            jBNuevaAsignacionActionPerformed(evt);
        } else if (JOptionPane.showConfirmDialog(rootPane, "Desea agregar pases a las actividades asignadas?", "Socios", JOptionPane.YES_NO_OPTION) == 0) {
            new GestionMovimientosdeCuentas(jTDNI.getText()).setVisible(rootPaneCheckingEnabled);
        } else {
            getContentPane().removeAll();
            initComponents();
        }
    }//GEN-LAST:event_jBGuardarActionPerformed

    private void jCHorariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCHorariosActionPerformed

    }//GEN-LAST:event_jCHorariosActionPerformed

    private void jBBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarActionPerformed
        LlenarTabla();
    }//GEN-LAST:event_jBBuscarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed

        initComponents();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void LlenarTabla() {
        String pases = "";
        DefaultTableModel modelo = (DefaultTableModel) jTActividades.getModel();
        modelo.setRowCount(0);
        Session sesion = HibernateUtil.getSessionFactory().openSession();
        Criteria consultaSocios = sesion.createCriteria(Socios.class);
        List<Socios> listaSocios = consultaSocios.list();
        for (int i = 0; i < listaSocios.size(); i++) {
            Socios socio = listaSocios.get(i);
            if (socio.getPersona().getDNI().equals(jTDNI.getText())) {
                jTNombre.setText(socio.getPersona().getApellido() + ", " + socio.getPersona().getNombre());
                Criteria consulta = sesion.createCriteria(Actividades_Socios_Turnos.class);
                List<Actividades_Socios_Turnos> listaRelaciones = consulta.list();
                for (int j = 0; j < listaRelaciones.size(); j++) {
                    Actividades_Socios_Turnos relacion = listaRelaciones.get(j);
                    if (relacion.getSocio().getPersona().getDNI().equals(jTDNI.getText())) {
                        if (relacion.getPaseLibre() == 1) {
                            pases = "Pase Libre";
                        } else {
                            pases = String.valueOf(relacion.getPases());
                        }
                        Object[] fila = {relacion.getRelacion().getActividad().getActividad(),
                            relacion.getRelacion().getHorario().getHorario(),
                            relacion.getRelacion().getProfesor().getPersona().getApellido() + ", "
                            + relacion.getRelacion().getProfesor().getPersona().getNombre(),
                            pases};
                        modelo.addRow(fila);
                    }
                }
            }
        }
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jBBuscar;
    private javax.swing.JButton jBGuardar;
    private javax.swing.JButton jBNuevaAsignacion;
    private javax.swing.JComboBox jCHorarios;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPAsignaciones;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTActividades;
    private javax.swing.JTextField jTDNI;
    private javax.swing.JTextField jTNombre;
    private javax.swing.JButton jbCancelar;
    // End of variables declaration//GEN-END:variables
}
