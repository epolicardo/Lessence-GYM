/*
 * Copyright 2016 Emiliano Policardo <www.facebook.com/policomputacion>.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.lessence.gymmaven.GUI;

import com.lessence.gymmaven.clases.Actividades;
import com.lessence.gymmaven.clases.Actividades_Socios_Turnos;
import com.lessence.gymmaven.clases.HibernateUtil;
import com.lessence.gymmaven.clases.Horarios;
import java.util.List;
import javax.swing.ComboBoxModel;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Criteria;
import org.hibernate.Session;

/**
 *
 * @author Emiliano Policardo <www.facebook.com/policomputacion>
 */
public class Form_Consultainscriptos extends javax.swing.JDialog {

    

    /**
     * Creates new form Form_Consultainscriptos
     */
    public Form_Consultainscriptos(java.awt.Frame parent, boolean modal) {

        super(parent, modal);
        initComponents();
        actualizarCombos();
        this.setLocationRelativeTo(null);
//        jTable1.setFont(new java.awt.Font("BankGothic Lt BT", 0, 14));

        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        jLabel5.setText("Cantidad de socios en la actividad y horarios seleccionados: " + modelo.getRowCount());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jCHorarios = new javax.swing.JComboBox<>();
        jCActividades = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("BankGothic Lt BT", 0, 14)); // NOI18N
        jLabel1.setText("Turnos");

        jLabel4.setFont(new java.awt.Font("BankGothic Lt BT", 0, 14)); // NOI18N
        jLabel4.setText("Actividades");

        jCHorarios.setFont(new java.awt.Font("BankGothic Lt BT", 0, 14)); // NOI18N
        jCHorarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCHorariosActionPerformed(evt);
            }
        });

        jCActividades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCActividadesActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Actividad", "Socios Inscriptos", "Turno"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel5.setFont(new java.awt.Font("BordeauxLight", 1, 18)); // NOI18N
        jLabel5.setText("Cantidad de Socios asignados segun la selección");

        jButton1.setFont(new java.awt.Font("BankGothic Lt BT", 0, 14)); // NOI18N
        jButton1.setText("Limpiar Selección");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jCActividades, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jCHorarios, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton1))
                                    .addComponent(jLabel1)))
                            .addComponent(jLabel5))
                        .addGap(0, 326, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCActividades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCHorarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void actualizarCombos() {
        List<Actividades> listaActividades = Actividades.listaActividades();
        for (int i = 0; i < listaActividades.size(); i++) {
            Actividades actividad = listaActividades.get(i);
            jCActividades.addItem(actividad.getActividad());
        }
        List<Horarios> listaHorarios = Horarios.consultaHorarios("From Horarios h ORDER BY h.dia ASC");
        for (int i = 0; i < listaHorarios.size(); i++) {
            Horarios horario = listaHorarios.get(i);
            jCHorarios.addItem(horario.getHorario());
        }
    }

    private void jCActividadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCActividadesActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.setRowCount(0);

        List<Actividades_Socios_Turnos> listaActividades_Socios_Turnos = Actividades_Socios_Turnos.listaActividades_Socios_Turnos();
        for (int i = 0; i < listaActividades_Socios_Turnos.size(); i++) {
            Actividades_Socios_Turnos relacion = listaActividades_Socios_Turnos.get(i);

            if (relacion.getRelacion().getActividad().getActividad().equals(jCActividades.getSelectedItem().toString())) {
                Object[] fila = {relacion.getRelacion().getActividad().getActividad(), relacion.getSocio().getPersona().getApellido()
                    + ", " + relacion.getSocio().getPersona().getNombre(), relacion.getRelacion().getHorario().getHorario()};
                modelo.addRow(fila);
            }
        }
        jLabel5.setText("Cantidad de socios en la actividad y horarios seleccionados: " + modelo.getRowCount());
    }//GEN-LAST:event_jCActividadesActionPerformed

    private void jCHorariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCHorariosActionPerformed

        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.setRowCount(0);

        List<Actividades_Socios_Turnos> listaActividades_Socios_Turnos = Actividades_Socios_Turnos.listaActividades_Socios_Turnos();
        for (int i = 0; i < listaActividades_Socios_Turnos.size(); i++) {
            Actividades_Socios_Turnos relacion = listaActividades_Socios_Turnos.get(i);
            if (jCActividades.getSelectedIndex() == -1) {
                if (relacion.getRelacion().getHorario().getIdHorario() == jCHorarios.getSelectedIndex() + 1) {
                    Object[] fila = {relacion.getRelacion().getActividad().getActividad(), relacion.getSocio().getPersona().getApellido()
                        + ", " + relacion.getSocio().getPersona().getNombre(), relacion.getRelacion().getHorario().getHorario()};
                    modelo.addRow(fila);
                }

            } else if (relacion.getRelacion().getActividad().getIdActividad() == jCActividades.getSelectedIndex() + 1) {
                if (relacion.getRelacion().getHorario().getIdHorario() == jCHorarios.getSelectedIndex() + 1) {
                    Object[] fila = {relacion.getRelacion().getActividad().getActividad(), relacion.getSocio().getPersona().getApellido()
                        + ", " + relacion.getSocio().getPersona().getNombre(), relacion.getRelacion().getHorario().getHorario()};
                    modelo.addRow(fila);
                }

            }

        }
        jLabel5.setText("Cantidad de socios en la actividad y horarios seleccionados: " + modelo.getRowCount());


    }//GEN-LAST:event_jCHorariosActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        getContentPane().removeAll();
        initComponents();
        actualizarCombos();
        jLabel5.setText("Cantidad de socios en la actividad y horarios seleccionados: " + modelo.getRowCount());
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jCActividades;
    private javax.swing.JComboBox<String> jCHorarios;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
